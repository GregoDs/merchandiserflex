// Mocks generated by Mockito 5.4.6 from annotations
// in flexmerchandiser/test/unit/api_service_test_setup.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:flexmerchandiser/exports.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResponse_0<T> extends _i1.SmartFake implements _i2.Response<T> {
  _FakeResponse_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [ApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiService extends _i1.Mock implements _i2.ApiService {
  MockApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i2.Response<dynamic>> get(
    String? url, {
    Map<String, dynamic>? queryParameters,
    bool? requiresAuth = true,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #get,
              [url],
              {#queryParameters: queryParameters, #requiresAuth: requiresAuth},
            ),
            returnValue: _i3.Future<_i2.Response<dynamic>>.value(
              _FakeResponse_0<dynamic>(
                this,
                Invocation.method(
                  #get,
                  [url],
                  {
                    #queryParameters: queryParameters,
                    #requiresAuth: requiresAuth,
                  },
                ),
              ),
            ),
          )
          as _i3.Future<_i2.Response<dynamic>>);

  @override
  _i3.Future<_i2.Response<dynamic>> post(
    String? url, {
    dynamic data,
    bool? requiresAuth = true,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #post,
              [url],
              {#data: data, #requiresAuth: requiresAuth},
            ),
            returnValue: _i3.Future<_i2.Response<dynamic>>.value(
              _FakeResponse_0<dynamic>(
                this,
                Invocation.method(
                  #post,
                  [url],
                  {#data: data, #requiresAuth: requiresAuth},
                ),
              ),
            ),
          )
          as _i3.Future<_i2.Response<dynamic>>);

  @override
  _i3.Future<_i2.Response<dynamic>> put(
    String? url, {
    Map<String, dynamic>? data,
    bool? requiresAuth = true,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #put,
              [url],
              {#data: data, #requiresAuth: requiresAuth},
            ),
            returnValue: _i3.Future<_i2.Response<dynamic>>.value(
              _FakeResponse_0<dynamic>(
                this,
                Invocation.method(
                  #put,
                  [url],
                  {#data: data, #requiresAuth: requiresAuth},
                ),
              ),
            ),
          )
          as _i3.Future<_i2.Response<dynamic>>);

  @override
  _i3.Future<_i2.Response<dynamic>> delete(
    String? url, {
    Map<String, dynamic>? data,
    bool? requiresAuth = true,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #delete,
              [url],
              {#data: data, #requiresAuth: requiresAuth},
            ),
            returnValue: _i3.Future<_i2.Response<dynamic>>.value(
              _FakeResponse_0<dynamic>(
                this,
                Invocation.method(
                  #delete,
                  [url],
                  {#data: data, #requiresAuth: requiresAuth},
                ),
              ),
            ),
          )
          as _i3.Future<_i2.Response<dynamic>>);
}
